function [par, O2, Ox, Oxx] = eqOcycle_v2(x, par)
    on = true; off = false;
    global GO
    pindx = par.pindx ;
    % unpack the parameters to be optimized
    % O2C_T
    if (par.opt_O2C_T == on)
        par.O2C_T = x(pindx.O2C_T) ;
    end
    
    % rO2C
    if (par.opt_rO2C == on)
        lrO2C    = x(pindx.lrO2C) ;
        par.rO2C = exp(lrO2C)     ;
    end
    %
    X0  = GO ;
    options.iprint = 0 ;
    options.atol   = 1e-12 ;
    options.rtol   = 1e-12 ;

    fprintf('Solving O model ...\n') ;
    [O2,ierr] = nsnew(X0,@(X) O_eqn(X, par),options) ;
    if (ierr ~= 0)
        fprintf('O2model did not converge.\n') ;
        F = O_eqn(O2, par) ;
        if par.Cfailure == on 
            npx = par.npx ;
            ncx = par.ncx ;
            nox = par.nox ;
            nx  = npx + ncx + nox  ;
            Ox  = sparse(par.nwet, nx) ;
            Oxx = sparse(par.nwet, nchoosek(nx,2)+nx) ;
        elseif ( par.Cfailure == off & norm(F) < 1e-6 )  
            options.atol = 1e-6 ;
            options.rtol = 1e-6 ;
            % Compute the gradient of the solution wrt the parameters
            GO = real(O2) + 1e-7*randn(par.nwet,1) ;
            [F, FD, Ox, Oxx] = O_eqn(O2, par) ;
        end 
    else
        % reset the global variable for the next call eqOcycle
        GO = real(O2) + 1e-7*randn(par.nwet,1) ;
        [F, FD, Ox, Oxx] = O_eqn(O2, par) ;
    end
end

function [F, FD, Ox, Oxx] = O_eqn(O2, par)
    on = true; off = false;
    pindx = par.pindx ;
    %
    % fixed parameters
    iwet  = par.iwet  ;
    nwet  = par.nwet  ;
    TRdiv = par.TRdiv ;
    I     = speye(nwet) ;
    PO4   = par.po4obs(iwet) ;
    % variables from C model
    POC  = par.POC    ;
    DOC  = par.DOC    ;
    DOCl = par.DOCl   ;
    DOCr = par.DOCr   ;
    Tz   = par.Tz     ;
    TZ   = par.Tz*1e8 ;
    Q10C  = par.Q10C  ;
    kdC   = par.kdC   ;
    kru   = par.kru   ;
    krd   = par.krd   ;
    etau  = par.etau  ;
    etad  = par.etad  ;
    UM    = par.UM    ;
    DM    = par.DM    ;
    WM    = par.WM    ;
    cc    = par.cc    ;
    dd    = par.dd    ;
    %
    % tunable parameters;
    O2C_T = par.O2C_T ; 
    rO2C  = par.rO2C  ;
    kappa_l = par.kappa_l ;
    kappa_p = par.kappa_p ;
    
    tf    = (par.vT - 30)/10 ;
    kC    = d0( kdC * Q10C .^ tf ) ;
    %
    % O2 saturation concentration
    vout  = Fsea2air(par,'O2') ;
    KO2   = vout.KO2   ;
    o2sat = vout.o2sat ;
    % rate of o2 production
    O2C = O2C_T*TZ + rO2C ; 
    C2P = par.C2P         ;
    G   = par.G           ;
    PO2 = d0(par.Cnpp(iwet))*O2C  ;

    % parobolic function for o2 consumption
    R      = 0.5 + 0.5*tanh(O2-5)    ;
    dRdO   = 0.5 - 0.5*tanh(O2-5).^2 ;
    d2RdO2 = -2*d0(dRdO)*tanh(O2-5)  ;

    % rate of o2 utilization
    kappa_r = kru*UM + krd*DM ;
    eta     = etau*WM ;
    % eta    = etau*UM + etad*DM ;
    LO2    = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + kappa_p*POC)*O2C.*R  ;
    dLdO   = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + kappa_p*POC)*O2C.*dRdO ;
    d2LdO2 = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + kappa_p*POC)*O2C.*d2RdO2  ;
    % O2 function
    F = TRdiv*O2 - PO2 + LO2 - KO2*(o2sat-O2) ;
    %
    if (nargout > 1)
        FD = mfactor(TRdiv + d0(dLdO) + KO2) ;
    end
    %
    %% ----------------- Gradient -------------------
    if (par.optim == off)
        Ox = [];
    elseif (par.optim & nargout > 2)
        npx  = par.npx ;
        ncx  = par.ncx ;
        nox  = par.nox ;
        nx   = npx + ncx + nox  ;
        Ox   = sparse(nwet, nx) ;
        Gx   = par.Gx ;
        DICx  = par.Cx(0*nwet+1:1*nwet,:) ;
        POCx  = par.Cx(1*nwet+1:2*nwet,:) ;
        DOCx  = par.Cx(2*nwet+1:3*nwet,:) ;
        DOClx = par.Cx(5*nwet+1:6*nwet,:) ;
        DOCrx = par.Cx(6*nwet+1:7*nwet,:) ;
        % P model only parameters
        for jj = 1:npx
            tmp = d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                      kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R ;

            Ox(:,jj) = mfactor(FD, -tmp) ;
        end 

        % C model only parameters
        for jj = (npx+1) : (npx+ncx)
            if ( par.opt_kru & jj == pindx.lkru )
                tmp = d0( d0(kru*UM*DOCr)*O2C ) * R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;
                
            elseif ( par.opt_krd & jj == pindx.lkrd )
                tmp = d0( d0(krd*DM*DOCr)*O2C ) * R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;
                
            elseif ( par.opt_kdC & jj == pindx.lkdC )
                kC_kdC = par.kC_kdC ;
                tmp = d0( d0(eta*kC_kdC*DOC)*O2C ) * R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;
                
            elseif ( par.opt_Q10C & jj == pindx.lQ10C )
                kC_Q10C = par.kC_Q10C ; 
                tmp = d0( d0( d0(eta*kC_Q10C)*DOC )*O2C ) * R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;

            elseif ( par.opt_etau & jj == pindx.letau )
                tmp = d0( etau*WM*(kC*DOC) )*O2C.*R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;

            elseif ( par.opt_etad & jj == pindx.letad )
                tmp = d0( etad*DM*(kC*DOC) )*O2C.*R + ...
                      d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;

            elseif ( par.opt_cc & jj == pindx.lcc )
                C2P_cc = par.C2P_cc;
                tmp = d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;
                
            elseif ( par.opt_dd & jj == pindx.ldd )
                C2P_dd = par.C2P_dd;
                tmp = d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;

            else
                tmp = d0( eta*kC*DOCx(:,jj) + kappa_r*DOCrx(:,jj) + ...
                          kappa_l*DOClx(:,jj) + kappa_p*POCx(:,jj))*O2C.*R  ;
                Ox(:,jj) = mfactor( FD, -tmp ) ;
            end 
        end

        % O model only parameters
        if (par.opt_O2C_T == on)
            O2C_O2C_T = d0(TZ) ; 
            tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + kappa_p*POC)*(O2C_O2C_T*R) ; 
            Ox(:,pindx.O2C_T) = mfactor(FD, -tmp) ;
        end

        if (par.opt_rO2C == on)
            O2C_rO2C = rO2C ; 
            tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + kappa_p*POC)*(O2C_rO2C*R) ; 
            Ox(:,pindx.lrO2C) = mfactor(FD, -tmp) ;
        end 
    end

    %% ------------------- Hessian -------------------------
    if (par.optim == off)
        Oxx = [];
    elseif (par.optim & nargout > 3)
        %
        Gxx    = par.Gxx ;
        DICxx  = par.Cxx(1:nwet,:) ;
        POCxx  = par.Cxx(1*nwet+1:2*nwet,:) ;
        DOCxx  = par.Cxx(2*nwet+1:3*nwet,:) ;
        DOClxx = par.Cxx(5*nwet+1:6*nwet,:) ;
        DOCrxx = par.Cxx(6*nwet+1:7*nwet,:) ;
        Oxx    = sparse(nwet,nchoosek(nx,2)+nx) ;
        % P model parameters
        kk = 0 ;
        for ju = 1 : npx
            for jo = ju : npx
                kk = kk + 1 ;
                tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                         kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                      d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                         kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                      d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                         kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                      Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                Oxx(:,kk) = mfactor(FD, -tmp) ;                 
            end 
        end
        %
        % P C model parameters
        for ju = 1 : npx
            for jo = (npx+1) : (npx+ncx)
                kk = kk + 1;
                % check if hessian associated with kdC, if
                % yes, use formula (1), otherwise use formula (2);
                if (par.opt_Q10C & jo == pindx.lQ10C)
                    tmp = d0(eta*kC_Q10C)*DOCx(:,ju).*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                elseif (par.opt_kdC & jo == pindx.lkdC)
                    tmp = d0(eta*kC_kdC*R)*DOCx(:,ju).*O2C + ...
                          d0(eta*kC_kdC*DOC)*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_kru & jo == pindx.lkru)
                    tmp = d0(kru*UM*DOCrx(:,ju))*R.*O2C + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                elseif (par.opt_krd & jo == pindx.lkrd)
                    tmp = d0(krd*DM*DOCrx(:,ju))*R.*O2C + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_etau & jo == pindx.letau)
                    tmp = d0( etau*WM*(kC*DOCx(:,ju)) )*R.*O2C + ...
                          d0( etau*WM*(kC*DOC) )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + ...
                             kappa_l*DOClx(:,jo) + kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + ...
                             kappa_l*DOClx(:,ju) + kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_etad & jo == pindx.letad)
                    tmp = d0( etad*DM*(kC*DOCx(:,ju)) )*R.*O2C + ...
                          d0( etad*DM*(kC*DOC) )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + ...
                             kappa_l*DOClx(:,jo) + kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + ...
                             kappa_l*DOClx(:,ju) + kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_cc & jo == pindx.lcc)
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + ...
                             kappa_l*DOClx(:,jo) + kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + ...
                             kappa_l*DOClx(:,ju) + kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                elseif (par.opt_dd & jo == pindx.ldd)
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + ...
                             kappa_l*DOClx(:,jo) + kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + ...
                             kappa_l*DOClx(:,ju) + kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                else
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                end
                Oxx(:,kk) = mfactor(FD, -tmp)    ;
            end
        end
        
        % C model only parameters
        for ju = (npx+1) : (npx+ncx)
            for jo = ju : (npx+ncx)
                kk = kk + 1 ;
                if (par.opt_kru & ju == pindx.lkru & jo == pindx.lkru)
                    % kru kru
                    tmp = d0(kru*UM*DOCr)*R.*O2C + ...
                          d0(kru*UM*DOCrx(:,ju))*R.*O2C*2 + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,ju).*O2C*2 + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo)  + kappa_r*DOCrx(:,jo)  + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju)  + kappa_r*DOCrx(:,ju)  + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                elseif (par.opt_krd & ju == pindx.lkrd & jo == pindx.lkrd)
                    % krd krd
                    tmp = d0(krd*DM*DOCr)*R.*O2C + ...
                          d0(krd*DM*DOCrx(:,ju))*R.*O2C*2 + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,ju).*O2C*2 + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo)  + kappa_r*DOCrx(:,jo)  + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju)  + kappa_r*DOCrx(:,ju)  + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                elseif (par.opt_kru & par.opt_krd & ju == pindx.lkru & jo == pindx.lkrd)
                    % kru krd
                    tmp = d0(kru*UM*DOCrx(:,jo))*R.*O2C + ...
                          d0(krd*DM*DOCrx(:,ju))*R.*O2C + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,ju).*O2C + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,jo).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                elseif (par.opt_etau & ju == pindx.letau & jo == pindx.letau)
                    % etau etau
                    tmp = d0( etau*WM*(kC*DOC) )*R.*O2C + ...
                          d0( etau*WM*(kC*DOCx(:,ju)) )*R.*O2C*2 + ...
                          d0( etau*WM*(kC*DOC) )*dRdO.*Ox(:,ju).*O2C*2 + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + kappa_l*DOClxx(:,kk) + ...
                             kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo)  + kappa_r*DOCrx(:,jo)  + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju)  + kappa_r*DOCrx(:,ju)  + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_etad & ju == pindx.letad & jo == pindx.letad)
                    % etad etad
                    tmp = d0( etad*DM*(kC*DOC) )*R.*O2C + ...
                          d0( etad*DM*(kC*DOCx(:,ju)) )*R.*O2C*2 + ...
                          d0( etad*DM*(kC*DOC) )*dRdO.*Ox(:,ju).*O2C*2 + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + kappa_l*DOClxx(:,kk) + ...
                             kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo)  + kappa_r*DOCrx(:,jo)  + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju)  + kappa_r*DOCrx(:,ju)  + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_etau & par.opt_etad & ju == pindx.letau & jo == pindx.letad)
                    % etau etad
                    tmp = d0( kru*UM*(kC*DOCx(:,jo)) )*R.*O2C + ...
                          d0( krd*DM*(kC*DOCx(:,ju)) )*R.*O2C + ...
                          d0( kru*UM*(kC*DOC) )*dRdO.*Ox(:,ju).*O2C + ...
                          d0( krd*DM*(kC*DOC) )*dRdO.*Ox(:,jo).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + kappa_l*DOClxx(:,kk) + ...
                             kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_Q10C & ju == pindx.lQ10C & jo == pindx.lQ10C)
                    % Q10C Q10C
                    kC_Q10C_Q10C = par.kC_Q10C_Q10C ;
                    tmp = d0(eta*kC_Q10C_Q10C)*DOC.*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOCx(:,ju).*R.*O2C*2 + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,ju).*O2C*2 + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                elseif (par.opt_kdC & ju == pindx.lkdC & jo == pindx.lkdC)
                    % kdC kdC
                    % kC_kdC_kdC = kC_kdC
                    tmp = eta*kC_kdC*DOC.*R.*O2C + ...
                          eta*kC_kdC*DOCx(:,ju).*R.*O2C*2 + ...
                          eta*kC_kdC*DOC.*dRdO.*Ox(:,ju).*O2C*2 + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                    % kru Q10C
                elseif (par.opt_kru & par.opt_Q10C & ju == pindx.lkru & jo == pindx.lQ10C)
                    tmp = d0(kru*UM*DOCrx(:,jo))*O2C.*R + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,jo).*O2C + ...
                          d0(eta*kC_Q10C)*DOCx(:,ju).*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,ju).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                          

                    % kru kdC
                elseif (par.opt_kru & par.opt_kdC & ju == pindx.lkru & jo == pindx.lkdC)
                    tmp = d0(kru*UM*DOCrx(:,jo))*O2C.*R + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,jo).*O2C + ...
                          eta*kC_kdC*DOCx(:,ju).*R.*O2C + ...
                          eta*kC_kdC*DOC.*dRdO.*Ox(:,ju).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % krd Q10C
                elseif (par.opt_krd & par.opt_Q10C & ju == pindx.lkrd & jo == pindx.lQ10C)
                    tmp = d0(krd*DM*DOCrx(:,jo))*O2C.*R + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,jo).*O2C + ...
                          d0(eta*kC_Q10C)*DOCx(:,ju).*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,ju).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                          

                    % krd kdC
                elseif (par.opt_krd & par.opt_kdC & ju == pindx.lkrd & jo == pindx.lkdC)
                    tmp = d0(krd*DM*DOCrx(:,jo))*O2C.*R + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,jo).*O2C + ...
                          eta*kC_kdC*DOCx(:,ju).*R.*O2C + ...
                          eta*kC_kdC*DOC.*dRdO.*Ox(:,ju).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                elseif (par.opt_etau & par.opt_Q10C & ju == pindx.letau & jo == pindx.lQ10C)
                    % etau Q10C
                    tmp = d0( etau*WM*kC*DOCx(:,jo) )*O2C.*R + ...
                          d0( etau*WM*kC_Q10C )*DOC.*R.*O2C + ...
                          d0( etau*WM*kC*DOC )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( eta*d0(kC_Q10C)*DOCx(:,ju) )*O2C.*R + ...
                          d0( eta*kC_Q10C )*DOC.*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % etau kdC
                elseif (par.opt_etau & par.opt_kdC & ju == pindx.letau & jo == pindx.lkdC)
                    tmp = d0( etau*WM*kC*DOCx(:,jo) )*O2C.*R + ...
                          d0( etau*WM*kC_kdC*DOC )*R.*O2C + ...
                          d0( etau*WM*kC*DOC )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( eta*(kC_kdC*DOCx(:,ju)) )*R.*O2C + ...
                          d0( eta*(kC_kdC*DOC) )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % etad Q10C
                elseif (par.opt_etad & par.opt_Q10C & ju == pindx.letad & jo == pindx.lQ10C)
                    tmp = d0( etad*DM*kC*DOCx(:,jo) )*O2C.*R + ...
                          d0( etad*DM*kC_Q10C )*DOC.*R.*O2C + ...
                          d0( etad*DM*kC*DOC )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( eta*kC_Q10C )*DOCx(:,ju).*R.*O2C + ...
                          d0( eta*kC_Q10C )*DOC.*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % etad kdC
                elseif (par.opt_etad & par.opt_kdC & ju == pindx.letad & jo == pindx.lkdC)
                    tmp = d0(etad*DM*kC*DOCx(:,jo))*O2C.*R + ...
                          d0(etad*DM*kC_kdC*DOC)*R.*O2C + ...
                          d0(etad*DM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                          d0(eta*kC_kdC*DOCx(:,ju))*R.*O2C + ...
                          d0(eta*kC_kdC*DOC)*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_etau & par.opt_kru & ju == pindx.letau & jo == pindx.lkru)
                    % etau kru
                    tmp = d0( etau*WM*(kC*DOCx(:,jo)) )*O2C.*R + ...
                          d0( etau*WM*(kC*DOC) )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( kru*UM*DOCrx(:,ju) )*R.*O2C + ...
                          d0( kru*UM*DOCr )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % etau krd
                elseif (par.opt_etau & par.opt_krd & ju == pindx.letau & jo == pindx.lkrd)
                    tmp = d0( etau*WM*(kC*DOCx(:,jo)) )*O2C.*R + ...
                          d0( etau*WM*(kC*DOC) )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( krd*DM*DOCrx(:,ju) )*R.*O2C + ...
                          d0( krd*DM*DOCr )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    
                    % etad kru
                elseif (par.opt_etad & par.opt_kru & ju == pindx.letad & jo == pindx.lkru)
                    tmp = d0( etad*DM*(kC*DOCx(:,jo)) )*O2C.*R + ...
                          d0( etad*DM*(kC*DOC) )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( kru*UM*DOCrx(:,ju) )*R.*O2C + ...
                          d0( kru*UM*DOCr )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % etad krd
                elseif (par.opt_etad & par.opt_krd & ju == pindx.letad & jo == pindx.lkrd)
                    tmp = d0( etad*DM*DOCx(:,jo) )*O2C.*R + ...
                          d0( etad*DM*DOC )*dRdO.*Ox(:,jo).*O2C + ...
                          d0( krd*DM*DOCrx(:,ju) )*R.*O2C + ...
                          d0( krd*DM*DOCr )*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % Q10C kdC 
                elseif (par.opt_Q10C & par.opt_kdC & ju == pindx.lQ10C ...
                        & jo == pindx.lkdC)
                    kC_kdC_Q10C = par.kC_kdC_Q10C ;
                    tmp = d0(eta*kC_kdC_Q10C)*DOC.*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOCx(:,jo).*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                          eta*kC_kdC*DOCx(:,ju).*R.*O2C + ...
                          eta*kC_kdC*DOC.*dRdO.*Ox(:,ju).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                    %parameter pairs with only one kru
                elseif (par.opt_kru & (ju == pindx.lkru | jo == ...
                                        pindx.lkru) & ju ~= jo)
                    
                    if (ju < pindx.lkru)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = d0(kru*UM*DOCrx(:,jk))*R.*O2C + ...
                          d0(kru*UM*DOCr)*dRdO.*Ox(:,jk).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                    %parameter pairs with only one krd
                elseif (par.opt_krd & (ju == pindx.lkrd | jo == pindx.lkrd) & ju ~= jo)
                    
                    if (ju < pindx.lkrd)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = d0(krd*DM*DOCrx(:,jk))*R.*O2C + ...
                          d0(krd*DM*DOCr)*dRdO.*Ox(:,jk).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                    %parameter pairs with only one etau
                elseif (par.opt_etau & (ju == pindx.letau | jo == pindx.letau) & ju ~= jo)
                    
                    if (ju < pindx.letau)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = d0(etau*WM*kC*DOCx(:,jk))*R.*O2C + ...
                          d0(etau*WM*kC*DOC)*dRdO.*Ox(:,jk).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    %parameter pairs with only one etad
                elseif (par.opt_etad & (ju == pindx.letad | jo == ...
                                        pindx.letad) & ju ~= jo)

                    if (ju < pindx.letad)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = d0(etad*DM*kC*DOCx(:,jk))*R.*O2C + ...
                          d0(etad*DM*kC*DOC)*dRdO.*Ox(:,jk).*O2C + ...
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    %parameter pairs with only one Q10C
                elseif (par.opt_Q10C & (ju == pindx.lQ10C | jo == pindx.lQ10C) & ju ~= jo)
                    
                    if (ju < pindx.lQ10C)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = d0(eta*kC_Q10C)*DOCx(:,jk).*R.*O2C + ...
                          d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,jk).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                    %parameter pairs with only one kdC
                elseif (par.opt_kdC & (ju == pindx.lkdC | jo == pindx.lkdC) & ju ~= jo)
                    
                    if (ju < pindx.lkdC)
                        jk = ju ;
                    else
                        jk = jo ;
                    end
                    %
                    tmp = eta*kC_kdC*DOCx(:,jk).*R.*O2C + ...
                          eta*kC_kdC*DOC.*dRdO.*Ox(:,jk).*O2C + ... 
                          d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % cc cc 
                elseif (par.opt_cc & ju == pindx.lcc & jo == pindx.lcc )
                    C2P_cc_cc = par.C2P_cc_cc ;
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 
                    
                    % cc dd 
                elseif (par.opt_cc & par.opt_dd & ju == pindx.lcc & jo == pindx.ldd )
                    C2P_cc_dd = par.C2P_cc_dd ;
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...                    
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ; 

                    % dd dd 
                elseif (par.opt_dd & ju == pindx.ldd & jo == pindx.ldd )
                    C2P_dd_dd = par.C2P_dd_dd ;
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...                    
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    % parameter pairs without Q10C, kdC, kappa_r, cc, or dd
                else 
                    tmp = d0(eta*kC*DOCxx(:,kk) + kappa_r*DOCrxx(:,kk) + ...
                             kappa_l*DOClxx(:,kk) + kappa_p*POCxx(:,kk))*R.*O2C + ...                             
                          d0(eta*kC*DOCx(:,jo) + kappa_r*DOCrx(:,jo) + kappa_l*DOClx(:,jo) + ...
                             kappa_p*POCx(:,jo))*dRdO.*Ox(:,ju).*O2C + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    
                end 
                Oxx(:,kk) = mfactor(FD, -tmp)    ;
            end 
        end 
        
        % P and O model only parameters
        for ju = 1 : npx
            for jo = (npx+ncx+1) : (npx+ncx+nox)
                kk = kk + 1 ;
                if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                    tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                             kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                    tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                             kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                          d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                             kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                          Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                end
                Oxx(:,kk) = mfactor(FD, -tmp)    ;
            end 
        end
        
        % C and O model only parameters
        for ju = (npx+1) : (npx+ncx)
            for jo = (npx+ncx+1) : (npx+ncx+nox)
                kk = kk + 1 ;
                if (par.opt_kru == on & ju == pindx.lkru)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(kru*UM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(kru*UM*DOCr)*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(kru*UM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(kru*UM*DOCr)*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else 
                        tmp = d0(kru*UM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end

                    %
                elseif (par.opt_krd == on & ju == pindx.lkrd)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(krd*DM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(krd*DM*DOCr)*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(krd*DM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(krd*DM*DOCr)*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else 
                        tmp = d0(krd*DM*DOCr)*(dRdO.*Ox(:,jo)).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end

                    %
                elseif (par.opt_Q10C == on & ju == pindx.lQ10C)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC_Q10C)*DOC.*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC_Q10C)*DOC.*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else 
                        tmp = d0(eta*kC_Q10C)*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end
                        %
                elseif (par.opt_kdC == on & ju == pindx.lkdC)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = eta*kC_kdC*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              eta*kC_kdC*DOC.*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = eta*kC_kdC*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              eta*kC_kdC*DOC.*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else 
                        tmp = eta*kC_kdC*DOC.*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end
                    %
                elseif (par.opt_etau == on & ju == pindx.letau)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(etau*WM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(etau*WM*kC*DOC)*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(etau*WM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(etau*WM*kC*DOC)*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else
                        tmp = d0(etau*WM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end
                    %
                elseif (par.opt_etad == on & ju == pindx.letad)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(etad*DM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(etad*DM*kC*DOC)*(O2C_O2C_T*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(etad*DM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(etad*DM*kC*DOC)*(O2C_rO2C*R) + ...
                              d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        %
                    else
                        %
                        tmp = d0(etad*DM*kC*DOC)*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end
                    
                elseif (par.opt_cc == on & ju == pindx.lcc)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    else
                        tmp = d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end 

                    %
                elseif (par.opt_dd == on & ju == pindx.ldd)
                    if (par.opt_O2C_T == on & jo == pindx.O2C_T)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        
                    elseif (par.opt_rO2C == on & jo == pindx.lrO2C)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    else 
                        tmp = d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                    end

                    %
                else
                    if (par.opt_O2C_T & jo == pindx.O2C_T)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_O2C_T*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        
                    elseif (par.opt_rO2C & jo == pindx.lrO2C)
                        tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                                 kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,ju)) + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*(O2C_rO2C*R) + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;

                    else 
                        tmp = d0(eta*kC*DOCx(:,ju) + kappa_r*DOCrx(:,ju) + kappa_l*DOClx(:,ju) + ...
                                 kappa_p*POCx(:,ju))*dRdO.*Ox(:,jo).*O2C + ...
                              Ox(:,ju).*d2LdO2.*Ox(:,jo) ;
                        
                    end 
                end
                Oxx(:,kk) = mfactor(FD, -tmp) ;
            end 
        end 
        
        % O model only parameters
        % O2C_T O2C_T
        if (par.opt_O2C_T == on)
            kk = kk + 1 ;
            tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                     kappa_p*POC)*(O2C_O2C_T*(dRdO.*Ox(:,pindx.O2C_T)))*2 + ... 
                  Ox(:,pindx.O2C_T).*d2LdO2.*Ox(:,pindx.O2C_T) ;

            Oxx(:,kk) = mfactor(FD, -tmp) ;
        end             
        % O2C_T rO2C
        if (par.opt_O2C_T == on & par.opt_rO2C == on)
            kk = kk + 1 ;
            tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                     kappa_p*POC)*(O2C_O2C_T*dRdO.*Ox(:,pindx.lrO2C)) + ...
                  d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                     kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,pindx.O2C_T)) + ... 
                  Ox(:,pindx.O2C_T).*d2LdO2.*Ox(:,pindx.lrO2C) ;

            Oxx(:,kk) = mfactor(FD, -tmp) ;
        end             

        % rO2C rO2C
        if (par.opt_rO2C == on & par.opt_rO2C == on)
            kk = kk + 1 ;
            tmp = d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                     kappa_p*POC)*(O2C_rO2C*R) + ...
                  d0(eta*kC*DOC + kappa_r*DOCr + kappa_l*DOCl + ...
                     kappa_p*POC)*(O2C_rO2C*dRdO.*Ox(:,pindx.lrO2C))*2 + ...
                  Ox(:,pindx.lrO2C).*d2LdO2.*Ox(:,pindx.lrO2C) ;

            Oxx(:,kk) = mfactor(FD, -tmp) ;
        end 
    end
end

